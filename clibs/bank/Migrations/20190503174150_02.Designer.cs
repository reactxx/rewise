// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bank.model;

namespace bank.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190503174150_02")]
    partial class _02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview4.19216.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bank.model.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path");

                    b.HasKey("BookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("bank.model.Facts", b =>
                {
                    b.Property<int>("FactsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookId");

                    b.HasKey("FactsId");

                    b.HasIndex("BookId");

                    b.ToTable("Factss");
                });

            modelBuilder.Entity("bank.model.Facts", b =>
                {
                    b.HasOne("bank.model.Book", "Book")
                        .WithMany("Factss")
                        .HasForeignKey("BookId");
                });
#pragma warning restore 612, 618
        }
    }
}
