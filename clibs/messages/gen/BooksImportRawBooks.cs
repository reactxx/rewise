// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rewise/books_import/books_import_raw_books.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RewiseDom {

  /// <summary>Holder for reflection information generated from rewise/books_import/books_import_raw_books.proto</summary>
  public static partial class BooksImportRawBooksReflection {

    #region Descriptor
    /// <summary>File descriptor for rewise/books_import/books_import_raw_books.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BooksImportRawBooksReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjByZXdpc2UvYm9va3NfaW1wb3J0L2Jvb2tzX2ltcG9ydF9yYXdfYm9va3Mu",
            "cHJvdG8SCXJld2lzZURvbRoWcmV3aXNlL2Jvb2svYm9vay5wcm90byJLCgdS",
            "YXdCb29rEgwKBGxhbmcYASABKAkSDwoHYm9va19pZBgCIAEoCRIhCgVmYWN0",
            "cxgDIAMoCzISLnJld2lzZURvbS5SYXdGYWN0IkgKB1Jhd0ZhY3QSCgoCaWQY",
            "ASABKAUSEgoKc3RlbW1fdGV4dBgCIAEoCRIdCgRmYWN0GAMgASgLMg8ucmV3",
            "aXNlRG9tLkZhY3RiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::RewiseDom.BookReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RewiseDom.RawBook), global::RewiseDom.RawBook.Parser, new[]{ "Lang", "BookId", "Facts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RewiseDom.RawFact), global::RewiseDom.RawFact.Parser, new[]{ "Id", "StemmText", "Fact" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  
  /// </summary>
  public sealed partial class RawBook : pb::IMessage<RawBook> {
    private static readonly pb::MessageParser<RawBook> _parser = new pb::MessageParser<RawBook>(() => new RawBook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RawBook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RewiseDom.BooksImportRawBooksReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawBook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawBook(RawBook other) : this() {
      lang_ = other.lang_;
      bookId_ = other.bookId_;
      facts_ = other.facts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawBook Clone() {
      return new RawBook(this);
    }

    /// <summary>Field number for the "lang" field.</summary>
    public const int LangFieldNumber = 1;
    private string lang_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lang {
      get { return lang_; }
      set {
        lang_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "book_id" field.</summary>
    public const int BookIdFieldNumber = 2;
    private string bookId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookId {
      get { return bookId_; }
      set {
        bookId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facts" field.</summary>
    public const int FactsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::RewiseDom.RawFact> _repeated_facts_codec
        = pb::FieldCodec.ForMessage(26, global::RewiseDom.RawFact.Parser);
    private readonly pbc::RepeatedField<global::RewiseDom.RawFact> facts_ = new pbc::RepeatedField<global::RewiseDom.RawFact>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RewiseDom.RawFact> Facts {
      get { return facts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RawBook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RawBook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lang != other.Lang) return false;
      if (BookId != other.BookId) return false;
      if(!facts_.Equals(other.facts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lang.Length != 0) hash ^= Lang.GetHashCode();
      if (BookId.Length != 0) hash ^= BookId.GetHashCode();
      hash ^= facts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lang.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Lang);
      }
      if (BookId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BookId);
      }
      facts_.WriteTo(output, _repeated_facts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lang.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lang);
      }
      if (BookId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookId);
      }
      size += facts_.CalculateSize(_repeated_facts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RawBook other) {
      if (other == null) {
        return;
      }
      if (other.Lang.Length != 0) {
        Lang = other.Lang;
      }
      if (other.BookId.Length != 0) {
        BookId = other.BookId;
      }
      facts_.Add(other.facts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Lang = input.ReadString();
            break;
          }
          case 18: {
            BookId = input.ReadString();
            break;
          }
          case 26: {
            facts_.AddEntriesFrom(input, _repeated_facts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RawFact : pb::IMessage<RawFact> {
    private static readonly pb::MessageParser<RawFact> _parser = new pb::MessageParser<RawFact>(() => new RawFact());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RawFact> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RewiseDom.BooksImportRawBooksReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawFact() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawFact(RawFact other) : this() {
      id_ = other.id_;
      stemmText_ = other.stemmText_;
      fact_ = other.fact_ != null ? other.fact_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawFact Clone() {
      return new RawFact(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "stemm_text" field.</summary>
    public const int StemmTextFieldNumber = 2;
    private string stemmText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StemmText {
      get { return stemmText_; }
      set {
        stemmText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fact" field.</summary>
    public const int FactFieldNumber = 3;
    private global::RewiseDom.Fact fact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RewiseDom.Fact Fact {
      get { return fact_; }
      set {
        fact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RawFact);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RawFact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StemmText != other.StemmText) return false;
      if (!object.Equals(Fact, other.Fact)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (StemmText.Length != 0) hash ^= StemmText.GetHashCode();
      if (fact_ != null) hash ^= Fact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (StemmText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StemmText);
      }
      if (fact_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Fact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (StemmText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StemmText);
      }
      if (fact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RawFact other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.StemmText.Length != 0) {
        StemmText = other.StemmText;
      }
      if (other.fact_ != null) {
        if (fact_ == null) {
          fact_ = new global::RewiseDom.Fact();
        }
        Fact.MergeFrom(other.Fact);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            StemmText = input.ReadString();
            break;
          }
          case 26: {
            if (fact_ == null) {
              fact_ = new global::RewiseDom.Fact();
            }
            input.ReadMessage(fact_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
