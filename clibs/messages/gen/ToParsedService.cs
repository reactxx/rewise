// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rewise/to_parsed/to_parsed_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rw.ToParsed {

  /// <summary>Holder for reflection information generated from rewise/to_parsed/to_parsed_service.proto</summary>
  public static partial class ToParsedServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for rewise/to_parsed/to_parsed_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ToParsedServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihyZXdpc2UvdG9fcGFyc2VkL3RvX3BhcnNlZF9zZXJ2aWNlLnByb3RvEgxy",
            "dy50b19wYXJzZWQaFHJld2lzZS9kb20vZG9tLnByb3RvIk8KCFJhd0Jvb2tz",
            "EgwKBG5hbWUYASABKAkSJAoFYm9va3MYAiADKAsyFS5ydy50b19wYXJzZWQu",
            "UmF3Qm9vaxIPCgdsZXNzb25zGAMgAygFIiYKB1Jhd0Jvb2sSDAoEbGFuZxgB",
            "IAEoCRINCgVmYWN0cxgCIAMoCSJECgtQYXJzZWRCb29rcxIMCgRuYW1lGAEg",
            "ASgJEicKBWJvb2tzGAIgAygLMhgucncudG9fcGFyc2VkLlBhcnNlZEJvb2si",
            "QwoKUGFyc2VkQm9vaxIMCgRsYW5nGAEgASgJEicKBWZhY3RzGAIgAygLMhgu",
            "cncudG9fcGFyc2VkLlBhcnNlZEZhY3QiSQoKUGFyc2VkRmFjdBILCgNpZHgY",
            "ASABKAUSEgoKYnJlYWtfdGV4dBgCIAEoCRIaCgRmYWN0GAMgASgLMgwucncu",
            "ZG9tLkZhY3RiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Rw.Dom.DomReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rw.ToParsed.RawBooks), global::Rw.ToParsed.RawBooks.Parser, new[]{ "Name", "Books", "Lessons" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rw.ToParsed.RawBook), global::Rw.ToParsed.RawBook.Parser, new[]{ "Lang", "Facts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rw.ToParsed.ParsedBooks), global::Rw.ToParsed.ParsedBooks.Parser, new[]{ "Name", "Books" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rw.ToParsed.ParsedBook), global::Rw.ToParsed.ParsedBook.Parser, new[]{ "Lang", "Facts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rw.ToParsed.ParsedFact), global::Rw.ToParsed.ParsedFact.Parser, new[]{ "Idx", "BreakText", "Fact" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RawBooks : pb::IMessage<RawBooks> {
    private static readonly pb::MessageParser<RawBooks> _parser = new pb::MessageParser<RawBooks>(() => new RawBooks());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RawBooks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rw.ToParsed.ToParsedServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawBooks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawBooks(RawBooks other) : this() {
      name_ = other.name_;
      books_ = other.books_.Clone();
      lessons_ = other.lessons_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawBooks Clone() {
      return new RawBooks(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "books" field.</summary>
    public const int BooksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rw.ToParsed.RawBook> _repeated_books_codec
        = pb::FieldCodec.ForMessage(18, global::Rw.ToParsed.RawBook.Parser);
    private readonly pbc::RepeatedField<global::Rw.ToParsed.RawBook> books_ = new pbc::RepeatedField<global::Rw.ToParsed.RawBook>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rw.ToParsed.RawBook> Books {
      get { return books_; }
    }

    /// <summary>Field number for the "lessons" field.</summary>
    public const int LessonsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_lessons_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> lessons_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Lessons {
      get { return lessons_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RawBooks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RawBooks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!books_.Equals(other.books_)) return false;
      if(!lessons_.Equals(other.lessons_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= books_.GetHashCode();
      hash ^= lessons_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      books_.WriteTo(output, _repeated_books_codec);
      lessons_.WriteTo(output, _repeated_lessons_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += books_.CalculateSize(_repeated_books_codec);
      size += lessons_.CalculateSize(_repeated_lessons_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RawBooks other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      books_.Add(other.books_);
      lessons_.Add(other.lessons_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            books_.AddEntriesFrom(input, _repeated_books_codec);
            break;
          }
          case 26:
          case 24: {
            lessons_.AddEntriesFrom(input, _repeated_lessons_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RawBook : pb::IMessage<RawBook> {
    private static readonly pb::MessageParser<RawBook> _parser = new pb::MessageParser<RawBook>(() => new RawBook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RawBook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rw.ToParsed.ToParsedServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawBook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawBook(RawBook other) : this() {
      lang_ = other.lang_;
      facts_ = other.facts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawBook Clone() {
      return new RawBook(this);
    }

    /// <summary>Field number for the "lang" field.</summary>
    public const int LangFieldNumber = 1;
    private string lang_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lang {
      get { return lang_; }
      set {
        lang_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facts" field.</summary>
    public const int FactsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_facts_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> facts_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Facts {
      get { return facts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RawBook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RawBook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lang != other.Lang) return false;
      if(!facts_.Equals(other.facts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lang.Length != 0) hash ^= Lang.GetHashCode();
      hash ^= facts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lang.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Lang);
      }
      facts_.WriteTo(output, _repeated_facts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lang.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lang);
      }
      size += facts_.CalculateSize(_repeated_facts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RawBook other) {
      if (other == null) {
        return;
      }
      if (other.Lang.Length != 0) {
        Lang = other.Lang;
      }
      facts_.Add(other.facts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Lang = input.ReadString();
            break;
          }
          case 18: {
            facts_.AddEntriesFrom(input, _repeated_facts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParsedBooks : pb::IMessage<ParsedBooks> {
    private static readonly pb::MessageParser<ParsedBooks> _parser = new pb::MessageParser<ParsedBooks>(() => new ParsedBooks());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParsedBooks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rw.ToParsed.ToParsedServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedBooks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedBooks(ParsedBooks other) : this() {
      name_ = other.name_;
      books_ = other.books_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedBooks Clone() {
      return new ParsedBooks(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "books" field.</summary>
    public const int BooksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rw.ToParsed.ParsedBook> _repeated_books_codec
        = pb::FieldCodec.ForMessage(18, global::Rw.ToParsed.ParsedBook.Parser);
    private readonly pbc::RepeatedField<global::Rw.ToParsed.ParsedBook> books_ = new pbc::RepeatedField<global::Rw.ToParsed.ParsedBook>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rw.ToParsed.ParsedBook> Books {
      get { return books_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParsedBooks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParsedBooks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!books_.Equals(other.books_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= books_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      books_.WriteTo(output, _repeated_books_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += books_.CalculateSize(_repeated_books_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParsedBooks other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      books_.Add(other.books_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            books_.AddEntriesFrom(input, _repeated_books_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParsedBook : pb::IMessage<ParsedBook> {
    private static readonly pb::MessageParser<ParsedBook> _parser = new pb::MessageParser<ParsedBook>(() => new ParsedBook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParsedBook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rw.ToParsed.ToParsedServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedBook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedBook(ParsedBook other) : this() {
      lang_ = other.lang_;
      facts_ = other.facts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedBook Clone() {
      return new ParsedBook(this);
    }

    /// <summary>Field number for the "lang" field.</summary>
    public const int LangFieldNumber = 1;
    private string lang_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lang {
      get { return lang_; }
      set {
        lang_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "facts" field.</summary>
    public const int FactsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rw.ToParsed.ParsedFact> _repeated_facts_codec
        = pb::FieldCodec.ForMessage(18, global::Rw.ToParsed.ParsedFact.Parser);
    private readonly pbc::RepeatedField<global::Rw.ToParsed.ParsedFact> facts_ = new pbc::RepeatedField<global::Rw.ToParsed.ParsedFact>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rw.ToParsed.ParsedFact> Facts {
      get { return facts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParsedBook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParsedBook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lang != other.Lang) return false;
      if(!facts_.Equals(other.facts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lang.Length != 0) hash ^= Lang.GetHashCode();
      hash ^= facts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lang.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Lang);
      }
      facts_.WriteTo(output, _repeated_facts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lang.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lang);
      }
      size += facts_.CalculateSize(_repeated_facts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParsedBook other) {
      if (other == null) {
        return;
      }
      if (other.Lang.Length != 0) {
        Lang = other.Lang;
      }
      facts_.Add(other.facts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Lang = input.ReadString();
            break;
          }
          case 18: {
            facts_.AddEntriesFrom(input, _repeated_facts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParsedFact : pb::IMessage<ParsedFact> {
    private static readonly pb::MessageParser<ParsedFact> _parser = new pb::MessageParser<ParsedFact>(() => new ParsedFact());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParsedFact> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rw.ToParsed.ToParsedServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedFact() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedFact(ParsedFact other) : this() {
      idx_ = other.idx_;
      breakText_ = other.breakText_;
      fact_ = other.fact_ != null ? other.fact_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedFact Clone() {
      return new ParsedFact(this);
    }

    /// <summary>Field number for the "idx" field.</summary>
    public const int IdxFieldNumber = 1;
    private int idx_;
    /// <summary>
    /// index of fact in csv source. Could be more facts with the same source (multiple fact for right side)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Idx {
      get { return idx_; }
      set {
        idx_ = value;
      }
    }

    /// <summary>Field number for the "break_text" field.</summary>
    public const int BreakTextFieldNumber = 2;
    private string breakText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BreakText {
      get { return breakText_; }
      set {
        breakText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fact" field.</summary>
    public const int FactFieldNumber = 3;
    private global::Rw.Dom.Fact fact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rw.Dom.Fact Fact {
      get { return fact_; }
      set {
        fact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParsedFact);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParsedFact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Idx != other.Idx) return false;
      if (BreakText != other.BreakText) return false;
      if (!object.Equals(Fact, other.Fact)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Idx != 0) hash ^= Idx.GetHashCode();
      if (BreakText.Length != 0) hash ^= BreakText.GetHashCode();
      if (fact_ != null) hash ^= Fact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Idx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idx);
      }
      if (BreakText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BreakText);
      }
      if (fact_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Fact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Idx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idx);
      }
      if (BreakText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BreakText);
      }
      if (fact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParsedFact other) {
      if (other == null) {
        return;
      }
      if (other.Idx != 0) {
        Idx = other.Idx;
      }
      if (other.BreakText.Length != 0) {
        BreakText = other.BreakText;
      }
      if (other.fact_ != null) {
        if (fact_ == null) {
          fact_ = new global::Rw.Dom.Fact();
        }
        Fact.MergeFrom(other.Fact);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Idx = input.ReadInt32();
            break;
          }
          case 18: {
            BreakText = input.ReadString();
            break;
          }
          case 26: {
            if (fact_ == null) {
              fact_ = new global::Rw.Dom.Fact();
            }
            input.ReadMessage(fact_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
