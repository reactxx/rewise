// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rewise/utils/hack_json.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RewiseDom {

  /// <summary>Holder for reflection information generated from rewise/utils/hack_json.proto</summary>
  public static partial class HackJsonReflection {

    #region Descriptor
    /// <summary>File descriptor for rewise/utils/hack_json.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HackJsonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyZXdpc2UvdXRpbHMvaGFja19qc29uLnByb3RvEglyZXdpc2VEb20aHmdv",
            "b2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90byJdCg5IYWNrSnNvblN0cmlu",
            "ZxIeChZxdWFsaWZpZWRfbWVzc2FnZV9uYW1lGAEgASgJEisKBXZhbHVlGAIg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIlsKDUhhY2tKc29u",
            "Qnl0ZXMSHgoWcXVhbGlmaWVkX21lc3NhZ2VfbmFtZRgBIAEoCRIqCgV2YWx1",
            "ZRgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5CeXRlc1ZhbHVlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RewiseDom.HackJsonString), global::RewiseDom.HackJsonString.Parser, new[]{ "QualifiedMessageName", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RewiseDom.HackJsonBytes), global::RewiseDom.HackJsonBytes.Parser, new[]{ "QualifiedMessageName", "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HackJsonString : pb::IMessage<HackJsonString> {
    private static readonly pb::MessageParser<HackJsonString> _parser = new pb::MessageParser<HackJsonString>(() => new HackJsonString());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HackJsonString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RewiseDom.HackJsonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HackJsonString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HackJsonString(HackJsonString other) : this() {
      qualifiedMessageName_ = other.qualifiedMessageName_;
      Value = other.Value;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HackJsonString Clone() {
      return new HackJsonString(this);
    }

    /// <summary>Field number for the "qualified_message_name" field.</summary>
    public const int QualifiedMessageNameFieldNumber = 1;
    private string qualifiedMessageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QualifiedMessageName {
      get { return qualifiedMessageName_; }
      set {
        qualifiedMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_value_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HackJsonString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HackJsonString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QualifiedMessageName != other.QualifiedMessageName) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QualifiedMessageName.Length != 0) hash ^= QualifiedMessageName.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QualifiedMessageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QualifiedMessageName);
      }
      if (value_ != null) {
        _single_value_codec.WriteTagAndValue(output, Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QualifiedMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QualifiedMessageName);
      }
      if (value_ != null) {
        size += _single_value_codec.CalculateSizeWithTag(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HackJsonString other) {
      if (other == null) {
        return;
      }
      if (other.QualifiedMessageName.Length != 0) {
        QualifiedMessageName = other.QualifiedMessageName;
      }
      if (other.value_ != null) {
        if (value_ == null || other.Value != "") {
          Value = other.Value;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QualifiedMessageName = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_value_codec.Read(input);
            if (value_ == null || value != "") {
              Value = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class HackJsonBytes : pb::IMessage<HackJsonBytes> {
    private static readonly pb::MessageParser<HackJsonBytes> _parser = new pb::MessageParser<HackJsonBytes>(() => new HackJsonBytes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HackJsonBytes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RewiseDom.HackJsonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HackJsonBytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HackJsonBytes(HackJsonBytes other) : this() {
      qualifiedMessageName_ = other.qualifiedMessageName_;
      Value = other.Value;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HackJsonBytes Clone() {
      return new HackJsonBytes(this);
    }

    /// <summary>Field number for the "qualified_message_name" field.</summary>
    public const int QualifiedMessageNameFieldNumber = 1;
    private string qualifiedMessageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QualifiedMessageName {
      get { return qualifiedMessageName_; }
      set {
        qualifiedMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _single_value_codec = pb::FieldCodec.ForClassWrapper<pb::ByteString>(18);
    private pb::ByteString value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HackJsonBytes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HackJsonBytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QualifiedMessageName != other.QualifiedMessageName) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QualifiedMessageName.Length != 0) hash ^= QualifiedMessageName.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QualifiedMessageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QualifiedMessageName);
      }
      if (value_ != null) {
        _single_value_codec.WriteTagAndValue(output, Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QualifiedMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QualifiedMessageName);
      }
      if (value_ != null) {
        size += _single_value_codec.CalculateSizeWithTag(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HackJsonBytes other) {
      if (other == null) {
        return;
      }
      if (other.QualifiedMessageName.Length != 0) {
        QualifiedMessageName = other.QualifiedMessageName;
      }
      if (other.value_ != null) {
        if (value_ == null || other.Value != pb::ByteString.Empty) {
          Value = other.Value;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QualifiedMessageName = input.ReadString();
            break;
          }
          case 18: {
            pb::ByteString value = _single_value_codec.Read(input);
            if (value_ == null || value != pb::ByteString.Empty) {
              Value = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
