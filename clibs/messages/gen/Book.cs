// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rewise/book/book.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RewiseDom {

  /// <summary>Holder for reflection information generated from rewise/book/book.proto</summary>
  public static partial class BookReflection {

    #region Descriptor
    /// <summary>File descriptor for rewise/book/book.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BookReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZyZXdpc2UvYm9vay9ib29rLnByb3RvEglyZXdpc2VEb20iagoERmFjdBIK",
            "CgJpZBgBIAEoBRIMCgR0ZXh0GAIgASgJEg4KBmJyZWFrcxgDIAEoDBIRCgly",
            "aWdodF9pZHMYBCADKAUSEgoKd29yZF9jbGFzcxgFIAEoCRIRCglsZXNzb25f",
            "aWQYBiABKAUiJQoIQm9va01ldGESCgoCaWQYASABKAkSDQoFdGl0bGUYAiAB",
            "KAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RewiseDom.Fact), global::RewiseDom.Fact.Parser, new[]{ "Id", "Text", "Breaks", "RightIds", "WordClass", "LessonId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RewiseDom.BookMeta), global::RewiseDom.BookMeta.Parser, new[]{ "Id", "Title" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Fact : pb::IMessage<Fact> {
    private static readonly pb::MessageParser<Fact> _parser = new pb::MessageParser<Fact>(() => new Fact());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fact> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RewiseDom.BookReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fact() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fact(Fact other) : this() {
      id_ = other.id_;
      text_ = other.text_;
      breaks_ = other.breaks_;
      rightIds_ = other.rightIds_.Clone();
      wordClass_ = other.wordClass_;
      lessonId_ = other.lessonId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fact Clone() {
      return new Fact(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "breaks" field.</summary>
    public const int BreaksFieldNumber = 3;
    private pb::ByteString breaks_ = pb::ByteString.Empty;
    /// <summary>
    /// word-breaking result. [pos1, len1, pos2, len2, ...]. First zero is ommited. If null => whole text;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Breaks {
      get { return breaks_; }
      set {
        breaks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "right_ids" field.</summary>
    public const int RightIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_rightIds_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> rightIds_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// seznam pravych stran
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RightIds {
      get { return rightIds_; }
    }

    /// <summary>Field number for the "word_class" field.</summary>
    public const int WordClassFieldNumber = 5;
    private string wordClass_ = "";
    /// <summary>
    /// word class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WordClass {
      get { return wordClass_; }
      set {
        wordClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lesson_id" field.</summary>
    public const int LessonIdFieldNumber = 6;
    private int lessonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LessonId {
      get { return lessonId_; }
      set {
        lessonId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fact);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Text != other.Text) return false;
      if (Breaks != other.Breaks) return false;
      if(!rightIds_.Equals(other.rightIds_)) return false;
      if (WordClass != other.WordClass) return false;
      if (LessonId != other.LessonId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Breaks.Length != 0) hash ^= Breaks.GetHashCode();
      hash ^= rightIds_.GetHashCode();
      if (WordClass.Length != 0) hash ^= WordClass.GetHashCode();
      if (LessonId != 0) hash ^= LessonId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (Breaks.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Breaks);
      }
      rightIds_.WriteTo(output, _repeated_rightIds_codec);
      if (WordClass.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(WordClass);
      }
      if (LessonId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LessonId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Breaks.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Breaks);
      }
      size += rightIds_.CalculateSize(_repeated_rightIds_codec);
      if (WordClass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WordClass);
      }
      if (LessonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LessonId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fact other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Breaks.Length != 0) {
        Breaks = other.Breaks;
      }
      rightIds_.Add(other.rightIds_);
      if (other.WordClass.Length != 0) {
        WordClass = other.WordClass;
      }
      if (other.LessonId != 0) {
        LessonId = other.LessonId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            Breaks = input.ReadBytes();
            break;
          }
          case 34:
          case 32: {
            rightIds_.AddEntriesFrom(input, _repeated_rightIds_codec);
            break;
          }
          case 42: {
            WordClass = input.ReadString();
            break;
          }
          case 48: {
            LessonId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BookMeta : pb::IMessage<BookMeta> {
    private static readonly pb::MessageParser<BookMeta> _parser = new pb::MessageParser<BookMeta>(() => new BookMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BookMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RewiseDom.BookReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookMeta(BookMeta other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookMeta Clone() {
      return new BookMeta(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BookMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BookMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BookMeta other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
